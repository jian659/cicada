#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: cicada-ldap-data
#spec:
#  accessModes:
#  - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#  storageClassName: standard-ssd

---

apiVersion: v1
kind: Service
metadata:
  name: cicada-keycloak
spec:
  selector:
    app: cicada-keycloak
  type: ClusterIP
  ports:
    - port: 7796
      targetPort: 7796
    #- protocol: TCP
    #  port: 80
    #  targetPort: 7796
    #  name: web-port
    #- protocol: TCP
    #  port: 9706
    #  targetPort: 9706
    #  name: metric-port

---

apiVersion: v1
kind: Service
metadata:
  name: cicada-ldap
spec:
  selector:
    app: cicada-ldap
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 7789
      targetPort: 7789

---

apiVersion: v1
kind: Service
metadata:
  name: cicada-mongo
spec:
  selector:
    app: cicada-mongodb
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 7797
      targetPort: 27017

---

apiVersion: v1
kind: Service
metadata:
  name: cicada-nifi
  labels:
    app: cicada-nifi
spec:
  type: ClusterIP
  ports:
  - port: 7795
    name: client
    targetPort: 8443
  selector:
    app: cicada-nifi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cicada-ldap
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cicada-ldap
    spec:
      containers:
        - name: cicada-ldap
          imagePullPolicy: IfNotPresent
          image: 127.0.0.1:5000/cicada-ldap
          ports:
            - containerPort: 7789
          #volumeMounts:
          #  - mountPath: /var/lib/ldap
          #    name: ldap-db
      #volumes:
      # - name: ldap-db
      #   persistentVolumeClaim:
      #     claimName: cicada-ldap-data
      #     readOnly: false
  selector:
    matchLabels:
      app: cicada-ldap

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cicada-keycloak
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cicada-keycloak
    spec:
      containers:
        - name: cicada-keycloak
          imagePullPolicy: IfNotPresent
          image: 127.0.0.1:5000/cicada-keycloak
          ports:
            - containerPort: 7796
            #- containerPort: 7796
            #  name: web-port
            #- containerPort: 9706
            #  name: metric-port 
          envFrom:
            - configMapRef:
                name: cicada-config
          env:
            - name: LDAP_USER_DN
              value: "${LDAP_USER_SEARCH_BASE}"
            - name: LDAP_BASE_DN
              value: "${LDAP_MANAGER_DN}"
            - name: LDAP_BASE_DN_PASSWORD
              value: "${LDAP_MANAGER_PASSWORD}"
            - name: LDAP_HOST
              value: "${LDAP_HOST}"
            - name: LDAP_PORT
              value: "${LDAP_PORT}"
            - name: CICADA_API_HOST
              value: "$(API_HOST)"
            - name: CICADA_API_PORT
              value: "$(API_PORT)"
            - name: JAVA_OPTS
              value: "$(KEYCLOAK_JAVA_OPTS)"
            - name: GC_LOG
              value: "$(KEYCLOAK_GC_LOG)"
            - name: PRESERVE_JAVA_OPTS
              value: "false"
  selector:
    matchLabels:
      app: cicada-keycloak

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cicada-mongodb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cicada-mongodb
    spec:
      containers:
        - name: cicada-mongodb
          imagePullPolicy: IfNotPresent
          image: 127.0.0.1:5000/cicada-mongo
          ports:
            - containerPort: 27017
          envFrom:
            - configMapRef:
                name: cicada-config
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "$(MONGO_USER)"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "$(MONGO_PASSWORD)"
            - name: MONGO_INITDB_DATABASE
              value: "$(MONGO_DB)"
            - name: MONGO_PORT
              value: "$(MONGO_PORT)"
          #volumeMounts:
          #  - mountPath: /data/db
          #    name: mongodb-db
      #volumes:
      # - name: mongodb-db
      #   persistentVolumeClaim:
      #     claimName: cicada-mongodb-data
      #     readOnly: false
  selector:
    matchLabels:
      app: cicada-mongodb

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cicada-nifi
spec:
  selector:
    matchLabels:
      app: cicada-nifi
  replicas: 1
  template:
    metadata:
      labels:
        app: cicada-nifi
    spec:
      containers:
        - name: cicada-nifi
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-ce", "tail -f /dev/null" ]
          image: 127.0.0.1:5000/cicada-nifi:v1.0
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
          ports:
            - containerPort: 7795
              name: web
          envFrom:
            - configMapRef:
                name: cicada-config
          env:
            - name: LDAP_URL
              value: "ldap://cicada_ldap:${LDAP_PORT}"
            - name: LDAP_IDENTITY_STRATEGY
              value: "USE_USERNAME"
            - name: LDAP_IDENTITY_ATTRIBUTE
              value: "uid"
            - name: LDAP_USER_SEARCH_FILTER
              value: "uid={0}"
            - name: INITIAL_ADMIN_IDENTITY
              value: "cicada"
            - name: AUTH
              value: "ldap"
            - name: LDAP_AUTHENTICATION_STRATEGY
              value: "SIMPLE"
            - name: KEYSTORE_PATH
              # value: "${KEYSTORE_PATH}"
              value: "/home/nifi/certs/keystore.p12"
            - name: KEYSTORE_TYPE
              value: "${KEYSTORE_TYPE}"
            - name: KEYSTORE_PASSWORD
              value: "${KEYSTORE_PASSWORD}"
            - name: TRUSTSTORE_PATH
              # value: "${TRUSTSTORE_PATH}"
              value: "/home/nifi/certs/truststore.p12"
            - name: TRUSTSTORE_PASSWORD
              value: "${TRUSTSTORE_PASSWORD}"
            - name: TRUSTSTORE_TYPE
              value: "${TRUSTSTORE_TYPE}"
            - name: LDAP_USER_SEARCH_BASE
              value: "${LDAP_USER_SEARCH_BASE}"
            - name: LDAP_MANAGER_DN
              value: "${LDAP_MANAGER_DN}"
            - name: LDAP_MANAGER_PASSWORD
              value: "${LDAP_MANAGER_PASSWORD}"
            - name: NIFI_WEB_PROXY_HOST
              value: "${NIFI_HOST}:${NIFI_PORT}"
            - name: NIFI_JVM_HEAP_INIT
              value: "${NIFI_JVM_HEAP_INIT}"
            - name: NIFI_JVM_HEAP_MAX
              value: "${NIFI_JVM_HEAP_MAX}"
            - name: CICADA_API_PORT
              value: "${API_PORT}"
      #hostAliases:
      #  - ip: "192.168.1.3"
      #    hostnames:
      #      - "daai"
      #  - ip: "192.168.1.1"
      #    hostnames:
      #      - "host-ip"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cicada-config
  namespace: default
data:
  # ldap
  LDAP_USER_SEARCH_BASE: "ou=users,dc=cicada,dc=data"
  LDAP_MANAGER_DN: "cn=Manager,dc=cicada,dc=data"
  LDAP_MANAGER_PASSWORD: "cicada@data"
  LDAP_HOST: "cicada-ldap"
  LDAP_PORT: "7789"
  # api
  API_HOST: "cicada-api"
  API_PORT: "80"
  API_SHARE_FOLDER: "/home/cicada/data"
  # keycloak
  KEYCLOAK_HOST: "cicada-keycloak"
  KEYCLOAK_PORT: "80"
  KEYCLOAK_GC_LOG: "true"
  KEYCLOAK_JAVA_OPTS: "-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/keycloak_heap.hprof -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true"
  # Global
  PLATFORM: k8s
  # NFS
  NFS_HOST: "cicada-nfs"
  # mongodb
  MONGO_HOST: "cicada-mongo"
  MONGO_PORT: "7797"
  MONGO_USER: "admin"
  MONGO_PASSWORD: "cicada@data"
  MONGO_DB: "cicada_demo"
  # NIFI
  NIFI_HOST: "cicada-nifi"
  NIFI_PORT: "7795"
  NIFI_JVM_HEAP_INIT: "4G"
  NIFI_JVM_HEAP_MAX: "4G"
  NIFI_SENSITIVE_PROPS_KEY: "1qa2ws3ed4rf5tg+6ytrezxcvfgbnhjm"
  NIFI_ELECTION_MAX_WAIT: "30 sec"
  DAAI_CDH_IP: 10.62.161.35
  KEYSTORE_PATH: "/home/nifi/certs/keystore.p12"
  KEYSTORE_TYPE: "PKCS12"
  KEYSTORE_PASSWORD: "cd536b7a6276606a8a524967d9d28ac3"
  TRUSTSTORE_PATH: "/home/nifi/certs/truststore.p12"
  TRUSTSTORE_PASSWORD: "7fb8d73d95579ef6a06ee67640874a62"
  TRUSTSTORE_TYPE: "PKCS12"
  NIFI_MAX_TIMER_DRIVENTHREADCOUNT: "10"
  NIFI_MAX_EVENT_DRIVENTHREADCOUNT: "1"
